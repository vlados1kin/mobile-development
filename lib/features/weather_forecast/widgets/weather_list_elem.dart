import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:weather_app/features/weather_forecast/data/weather_forecast_data.dart';
import 'package:weather_app/features/weather_forecast/styles/weather_list_elem_style.dart';
import 'package:weather_app/features/weather_settings/providers/providers.dart';
import 'package:weather_app/services/settings/models/models.dart';

/// –í–∏–¥–∂–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã
class WeatherListElem extends StatelessWidget {
  const WeatherListElem({
    required this.weatherData,
    super.key,
    this.onTap,
    this.style,
  });

  final WeatherData weatherData;
  final VoidCallback? onTap;
  final WeatherListElemStyle? style;

  String getWeatherIconPath(String iconCode) {
    return 'assets/images/png/$iconCode.png';
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final defaultStyle = Theme.of(context).extension<WeatherListElemStyle>()!;
    final borderRadius = style?.borderRadius ?? defaultStyle.borderRadius;
    final padding = style?.padding ?? defaultStyle.padding;
    final backgroundColor = style?.backgroundColor ?? defaultStyle.backgroundColor;

    final provider = Provider.of<SettingsProvider>(context);

    final wind = switch (provider.windSpeedUnit) {
      WindSpeedUnit.mps => weatherData.windM,
      WindSpeedUnit.kph => weatherData.windK,
    };

    final speedSign = switch (provider.windSpeedUnit) {
      WindSpeedUnit.mps => '–º/—Å',
      WindSpeedUnit.kph => '–∫–º/—á',
    };

    final pressure = switch (provider.pressureUnit) {
      PressureUnit.hpa => weatherData.pressureP,
      PressureUnit.mmHg => weatherData.pressureM,
    };

    final pressureSign = switch (provider.pressureUnit) {
      PressureUnit.hpa => '–≥–ü–∞',
      PressureUnit.mmHg => '–º–º —Ä—Ç. —Å—Ç.',
    };

    final temperature = switch (provider.temperatureUnit) {
      TemperatureUnit.celsius => weatherData.temperatureC,
      TemperatureUnit.fahrenheit => weatherData.temperatureF,
      TemperatureUnit.kelvin => weatherData.temperatureK,
    };

    final maxTemperature = switch (provider.temperatureUnit) {
      TemperatureUnit.celsius => weatherData.maxTemperatureC,
      TemperatureUnit.fahrenheit => weatherData.maxTemperatureF,
      TemperatureUnit.kelvin => weatherData.maxTemperatureK,
    };

    final minTemperature = switch (provider.temperatureUnit) {
      TemperatureUnit.celsius => weatherData.minTemperatureC,
      TemperatureUnit.fahrenheit => weatherData.minTemperatureF,
      TemperatureUnit.kelvin => weatherData.minTemperatureK,
    };

    final temperatureSign = switch (provider.temperatureUnit) {
      TemperatureUnit.celsius => '¬∞C',
      TemperatureUnit.fahrenheit => '¬∞F',
      TemperatureUnit.kelvin => 'K',
    };

    final isDark = theme.brightness == Brightness.dark;

    // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
    final textColor = isDark ? Colors.white : Colors.blue[800];

    return GestureDetector(
      onTap: onTap,
      child: Container(
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(borderRadius),
          color: isDark ? Colors.grey[850] : Colors.white, // –ë–µ–ª—ã–π —Ñ–æ–Ω –¥–ª—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
        ),
        padding: padding,
        child: Row(
          children: [
            // –ú–∞–ª–µ–Ω—å–∫–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–ª–µ–≤–∞ –¥–ª—è –∏–∫–æ–Ω–∫–∏
            Container(
              width: 60,
              height: 60,
              decoration: BoxDecoration(
                color: Colors.blue, // –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∏–∫–æ–Ω–∫–∏
                borderRadius: BorderRadius.circular(12),
              ),
              child: Image.asset(
                getWeatherIconPath(weatherData.icon),
                width: 40,
                height: 40,
                errorBuilder: (context, error, stackTrace) => const Icon(Icons.error),
              ),
            ),
            const SizedBox(width: 16), // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∏–∫–æ–Ω–∫–æ–π –∏ —Ç–µ–∫—Å—Ç–æ–º

            // –ë–æ–ª—å—à–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–ø—Ä–∞–≤–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
            Expanded(
              child: Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: Colors.transparent,
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    // üóì –î–∞—Ç–∞ –∏ "—Å–µ–≥–æ–¥–Ω—è"
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          weatherData.title,
                          style: theme.textTheme.headlineSmall?.copyWith(
                            color: textColor,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        if (weatherData.subtitle != null) ...[
                          const SizedBox(width: 8),
                          Text(
                            weatherData.subtitle!,
                            style: theme.textTheme.headlineSmall?.copyWith(
                              color: textColor,
                            ),
                          ),
                        ],
                      ],
                    ),
                    const SizedBox(height: 12),

                    // üå§ –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ | –≤–µ—Ç–µ—Ä –∏ –¥–∞–≤–ª–µ–Ω–∏–µ
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
                        if (temperature != null)
                          Text(
                            '$temperature$temperatureSign',
                            style: theme.textTheme.bodyLarge?.copyWith(
                              color: textColor,
                              fontWeight: FontWeight.w600,
                            ),
                          )
                        else
                          Text(
                            '$minTemperature..$maxTemperature$temperatureSign',
                            style: theme.textTheme.bodyLarge?.copyWith(
                              color: textColor,
                              fontWeight: FontWeight.w600,
                            ),
                          ),

                        // –í–µ—Ç–µ—Ä –∏ –¥–∞–≤–ª–µ–Ω–∏–µ
                        Column(
                          crossAxisAlignment: CrossAxisAlignment.end,
                          children: [
                            Text(
                              '${wind.toStringAsFixed(1)} $speedSign ${weatherData.windDir}',
                              style: theme.textTheme.bodySmall?.copyWith(
                                color: textColor,
                              ),
                            ),
                            Text(
                              '$pressure $pressureSign',
                              style: theme.textTheme.bodySmall?.copyWith(
                                color: textColor,
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}